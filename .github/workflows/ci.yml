name: CI/CD

on:
    pull_request:
        branches: [ main ]

jobs:
    examples-builds:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x]
        steps:
            - uses: actions/checkout@v3
            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Get npm cache directory path
              id: npm-cache-dir-path
              run: echo "::set-output name=dir::$(npm get cache)"
            - uses: actions/cache@v2
              id: npm-cache
              with:
                  path: ${{ steps.npm-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-
            - name: npm Install dependencies
              run: |
                  npm install
            - name: Run example builds
              run: |
                  chown -R root .
                  chmod -R a+rwx .
                  bash ./examples.sh
    eslint:
        needs: examples-builds
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: '18.x'
            - name: npm Install dependencies
              run: |
                  npm install
            - name: Run ESLint
              run: |
                  chown -R root .
                  chmod -R a+rwx .
                  npm run lint
    integration-tests:
        needs: eslint
        concurrency:
            group: integration-tests-${{ github.ref }}
            cancel-in-progress: true
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: '18.x'
            - name: npm install dependencies
              run: |
                  npm install
            - name: Run Test Jest
              run: |
                  chown -R root .
                  chmod -R a+rwx .
                  set +e
                  docker compose --file ./docker-compose.substrate-contracts-node.yml up -d
                  sleep 10
                  set -e
                  npm run test
                  kill $P1
              timeout-minutes: 3
